version: 2
jobs:
  testtools:
    docker:
      - image: circleci/node:10.10

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "tools/nf-gen-ts/package.json" }}
          - v1-dependencies-

      - run:
          command: npm install
          working_directory: tools/nf-gen-ts/

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "tools/nf-gen-ts/package.json" }}

      # run "tests"
      - run:
          command: npm run check
          working_directory: tools/nf-gen-ts/

  testjsts:
    docker:
      - image: circleci/node:10.10

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "js/package.json" }}
          - v1-dependencies-

      - run:
          command: npm install
          working_directory: js/

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "js/package.json" }}

      - run:
          command: npm run test
          working_directory: js/

  testjava:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "java/pom.xml" }}
          - v1-dependencies-

      - run:
          command: mvn dependency:go-offline
          working_directory: java/

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "java/pom.xml" }}

      - run:
          command: mvn clean verify -B -e
          working_directory: java/

  testswift:
    macos:
      xcode: "10.1.0"

    working_directory: ~/repo

    steps:
      - checkout

      # - run: |
      #     sudo gem install -N xcodeproj

      - run:
          command: |
            # rake xcodeproj
            swift test
          working_directory: swift/

  testcpp:
    docker:
      - image: ubuntu:bionic

    environment:
      CC: clang-3.9
      CXX: clang++-3.9

    working_directory: ~/repo

    steps:
      - checkout

      - run: |
          apt-get update && apt-get install -y build-essential ninja-build clang-3.9 libc++-dev libc++abi-dev libcurl4-openssl-dev wget git cmake

      - run:
          name: "Pull Submodules"
          command: git submodule update --init --recursive

      - run: |
          mkdir ninja-build

      - run:
          command: cmake -GNinja ../
          working_directory: ninja-build/

      - run:
          command: |
            echo $CC
            echo $CCX
            ninja
            ninja test
          working_directory: ninja-build/

  testpython:
    docker:
      - image: circleci/python:3.6.4

    working_directory: ~/repo

    steps:
      - checkout

      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages

      - run:
          command: python setup.py install
          working_directory: python/

      - run:
          command: python -m unittest discover -v
          working_directory: python/

workflows:
    version: 2
    build:
      jobs:
        - testtools
        - testjsts
        - testjava
        - testswift
        - testcpp
        - testpython